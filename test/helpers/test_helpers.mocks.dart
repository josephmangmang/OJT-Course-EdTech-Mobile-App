// Mocks generated by Mockito 5.4.2 from annotations
// in edtechapp/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i9;

import 'package:cloud_firestore/cloud_firestore.dart' as _i4;
import 'package:dartz/dartz.dart' as _i2;
import 'package:edtechapp/exception/app_exception.dart' as _i11;
import 'package:edtechapp/model/course.dart' as _i5;
import 'package:edtechapp/model/credit_card.dart' as _i12;
import 'package:edtechapp/model/user.dart' as _i18;
import 'package:edtechapp/repository/course_repository.dart' as _i20;
import 'package:edtechapp/services/authentication_service.dart' as _i17;
import 'package:edtechapp/services/course_impl_service.dart' as _i16;
import 'package:edtechapp/services/repository_impl_service.dart' as _i13;
import 'package:edtechapp/services/repository_service.dart' as _i10;
import 'package:edtechapp/services/share_impl_service.dart' as _i15;
import 'package:edtechapp/services/shared_pref_service_service.dart' as _i19;
import 'package:edtechapp/services/shared_service.dart' as _i14;
import 'package:firebase_auth/firebase_auth.dart' as _i3;
import 'package:flutter/material.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stacked_services/stacked_services.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseAuth_1 extends _i1.SmartFake implements _i3.FirebaseAuth {
  _FakeFirebaseAuth_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFirestore_2 extends _i1.SmartFake
    implements _i4.FirebaseFirestore {
  _FakeFirebaseFirestore_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_3 extends _i1.SmartFake implements _i3.User {
  _FakeUser_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCourse_4 extends _i1.SmartFake implements _i5.Course {
  _FakeCourse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i6.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i7.GlobalKey<_i7.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i7.GlobalKey<_i7.NavigatorState>?);
  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i6.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<T?>? navigateWithTransition<T>(
    _i7.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i7.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i6.Transition? transitionClass,
    _i6.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i8.Future<T?>?);
  @override
  _i8.Future<T?>? replaceWithTransition<T>(
    _i7.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i7.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i6.Transition? transitionClass,
    _i6.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i8.Future<T?>?);
  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void popUntil(
    _i7.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i7.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i8.Future<T?>?);
  @override
  _i8.Future<T?>? navigateToView<T>(
    _i7.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i7.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i6.Transition? transition,
    _i6.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i8.Future<T?>?);
  @override
  _i8.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i7.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i8.Future<T?>?);
  @override
  _i8.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i8.Future<T?>?);
  @override
  _i8.Future<T?>? clearStackAndShowView<T>(
    _i7.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i8.Future<T?>?);
  @override
  _i8.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i8.Future<T?>?);
  @override
  _i8.Future<T?>? clearTillFirstAndShowView<T>(
    _i7.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i8.Future<T?>?);
  @override
  _i8.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i7.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i8.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i6.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i6.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<_i6.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i8.Future<_i6.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i8.Future<_i6.SheetResponse<dynamic>?>.value(),
      ) as _i8.Future<_i6.SheetResponse<dynamic>?>);
  @override
  _i8.Future<_i6.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i9.Color? barrierColor = const _i9.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i8.Future<_i6.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i8.Future<_i6.SheetResponse<T>?>.value(),
      ) as _i8.Future<_i6.SheetResponse<T>?>);
  @override
  void completeSheet(_i6.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i6.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i6.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i7.Widget Function(
      _i7.BuildContext,
      _i6.DialogRequest<dynamic>,
      dynamic Function(_i6.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<_i6.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i9.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i9.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i6.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i8.Future<_i6.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i8.Future<_i6.DialogResponse<dynamic>?>.value(),
      ) as _i8.Future<_i6.DialogResponse<dynamic>?>);
  @override
  _i8.Future<_i6.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i9.Color? barrierColor = const _i9.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i8.Future<_i6.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i8.Future<_i6.DialogResponse<T>?>.value(),
      ) as _i8.Future<_i6.DialogResponse<T>?>);
  @override
  _i8.Future<_i6.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i9.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i9.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i6.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i8.Future<_i6.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i8.Future<_i6.DialogResponse<dynamic>?>.value(),
      ) as _i8.Future<_i6.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i6.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [RepositoryService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepositoryService extends _i1.Mock implements _i10.RepositoryService {
  @override
  _i8.Future<List<_i5.Course>> getCourse() => (super.noSuchMethod(
        Invocation.method(
          #getCourse,
          [],
        ),
        returnValue: _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
      ) as _i8.Future<List<_i5.Course>>);
  @override
  _i8.Future<List<_i5.Course>> searchCourse(String? searchCourse) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchCourse,
          [searchCourse],
        ),
        returnValue: _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
      ) as _i8.Future<List<_i5.Course>>);
  @override
  _i8.Future<List<_i5.Course>> categoryCourse(String? categoryCourse) =>
      (super.noSuchMethod(
        Invocation.method(
          #categoryCourse,
          [categoryCourse],
        ),
        returnValue: _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
      ) as _i8.Future<List<_i5.Course>>);
  @override
  _i8.Future<List<_i5.Course>> addCourse() => (super.noSuchMethod(
        Invocation.method(
          #addCourse,
          [],
        ),
        returnValue: _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
      ) as _i8.Future<List<_i5.Course>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>> addCourseToCart(
          String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCourseToCart,
          [courseId],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #addCourseToCart,
            [courseId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #addCourseToCart,
            [courseId],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, bool>> isCourseCart(
          String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #isCourseCart,
          [courseId],
        ),
        returnValue: _i8.Future<_i2.Either<_i11.AppException, bool>>.value(
            _FakeEither_0<_i11.AppException, bool>(
          this,
          Invocation.method(
            #isCourseCart,
            [courseId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, bool>>.value(
                _FakeEither_0<_i11.AppException, bool>(
          this,
          Invocation.method(
            #isCourseCart,
            [courseId],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, bool>>);
  @override
  _i8.Future<List<_i5.Course>> getUserCourses() => (super.noSuchMethod(
        Invocation.method(
          #getUserCourses,
          [],
        ),
        returnValue: _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
      ) as _i8.Future<List<_i5.Course>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>> buyCourse(
          String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #buyCourse,
          [courseId],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #buyCourse,
            [courseId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #buyCourse,
            [courseId],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>);
  @override
  _i8.Future<List<_i12.CreditCard>> getCreditCard() => (super.noSuchMethod(
        Invocation.method(
          #getCreditCard,
          [],
        ),
        returnValue:
            _i8.Future<List<_i12.CreditCard>>.value(<_i12.CreditCard>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i12.CreditCard>>.value(<_i12.CreditCard>[]),
      ) as _i8.Future<List<_i12.CreditCard>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>> addCreditCard(
    String? name,
    String? cardNumber,
    String? expireDate,
    String? cvv,
    String? paymentMethod,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCreditCard,
          [
            name,
            cardNumber,
            expireDate,
            cvv,
            paymentMethod,
          ],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #addCreditCard,
            [
              name,
              cardNumber,
              expireDate,
              cvv,
              paymentMethod,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #addCreditCard,
            [
              name,
              cardNumber,
              expireDate,
              cvv,
              paymentMethod,
            ],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>);
}

/// A class which mocks [RepositoryImplService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepositoryImplService extends _i1.Mock
    implements _i13.RepositoryImplService {
  @override
  _i3.FirebaseAuth get auth0 => (super.noSuchMethod(
        Invocation.getter(#auth0),
        returnValue: _FakeFirebaseAuth_1(
          this,
          Invocation.getter(#auth0),
        ),
        returnValueForMissingStub: _FakeFirebaseAuth_1(
          this,
          Invocation.getter(#auth0),
        ),
      ) as _i3.FirebaseAuth);
  @override
  _i4.FirebaseFirestore get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeFirebaseFirestore_2(
          this,
          Invocation.getter(#db),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_2(
          this,
          Invocation.getter(#db),
        ),
      ) as _i4.FirebaseFirestore);
  @override
  _i3.User get userName => (super.noSuchMethod(
        Invocation.getter(#userName),
        returnValue: _FakeUser_3(
          this,
          Invocation.getter(#userName),
        ),
        returnValueForMissingStub: _FakeUser_3(
          this,
          Invocation.getter(#userName),
        ),
      ) as _i3.User);
  @override
  _i8.Future<List<_i5.Course>> getCourse() => (super.noSuchMethod(
        Invocation.method(
          #getCourse,
          [],
        ),
        returnValue: _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
      ) as _i8.Future<List<_i5.Course>>);
  @override
  _i8.Future<List<_i5.Course>> searchCourse(String? searchCourse) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchCourse,
          [searchCourse],
        ),
        returnValue: _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
      ) as _i8.Future<List<_i5.Course>>);
  @override
  _i8.Future<List<_i5.Course>> categoryCourse(String? categoryCourse) =>
      (super.noSuchMethod(
        Invocation.method(
          #categoryCourse,
          [categoryCourse],
        ),
        returnValue: _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
      ) as _i8.Future<List<_i5.Course>>);
  @override
  _i8.Future<List<_i5.Course>> addCourse() => (super.noSuchMethod(
        Invocation.method(
          #addCourse,
          [],
        ),
        returnValue: _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
      ) as _i8.Future<List<_i5.Course>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>> buyCourse(
          String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #buyCourse,
          [courseId],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #buyCourse,
            [courseId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #buyCourse,
            [courseId],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>);
  @override
  _i8.Future<List<_i5.Course>> getUserCourses() => (super.noSuchMethod(
        Invocation.method(
          #getUserCourses,
          [],
        ),
        returnValue: _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
      ) as _i8.Future<List<_i5.Course>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>> addCreditCard(
    String? name,
    String? cardNumber,
    String? expireDate,
    String? cvv,
    String? paymentMethod,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCreditCard,
          [
            name,
            cardNumber,
            expireDate,
            cvv,
            paymentMethod,
          ],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #addCreditCard,
            [
              name,
              cardNumber,
              expireDate,
              cvv,
              paymentMethod,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #addCreditCard,
            [
              name,
              cardNumber,
              expireDate,
              cvv,
              paymentMethod,
            ],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>> addCourseToCart(
          String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCourseToCart,
          [courseId],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #addCourseToCart,
            [courseId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #addCourseToCart,
            [courseId],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, bool>> isCourseCart(
          String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #isCourseCart,
          [courseId],
        ),
        returnValue: _i8.Future<_i2.Either<_i11.AppException, bool>>.value(
            _FakeEither_0<_i11.AppException, bool>(
          this,
          Invocation.method(
            #isCourseCart,
            [courseId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, bool>>.value(
                _FakeEither_0<_i11.AppException, bool>(
          this,
          Invocation.method(
            #isCourseCart,
            [courseId],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, bool>>);
  @override
  _i8.Future<List<_i12.CreditCard>> getCreditCard() => (super.noSuchMethod(
        Invocation.method(
          #getCreditCard,
          [],
        ),
        returnValue:
            _i8.Future<List<_i12.CreditCard>>.value(<_i12.CreditCard>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i12.CreditCard>>.value(<_i12.CreditCard>[]),
      ) as _i8.Future<List<_i12.CreditCard>>);
}

/// A class which mocks [SharedService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedService extends _i1.Mock implements _i14.SharedService {
  @override
  _i8.Future<void> setCourse(
    String? key,
    _i5.Course? course,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCourse,
          [
            key,
            course,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<_i5.Course> getCourse(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getCourse,
          [key],
        ),
        returnValue: _i8.Future<_i5.Course>.value(_FakeCourse_4(
          this,
          Invocation.method(
            #getCourse,
            [key],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Course>.value(_FakeCourse_4(
          this,
          Invocation.method(
            #getCourse,
            [key],
          ),
        )),
      ) as _i8.Future<_i5.Course>);
}

/// A class which mocks [ShareImplService].
///
/// See the documentation for Mockito's code generation for more information.
class MockShareImplService extends _i1.Mock implements _i15.ShareImplService {
  @override
  _i8.Future<_i5.Course> getCourse(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getCourse,
          [key],
        ),
        returnValue: _i8.Future<_i5.Course>.value(_FakeCourse_4(
          this,
          Invocation.method(
            #getCourse,
            [key],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i5.Course>.value(_FakeCourse_4(
          this,
          Invocation.method(
            #getCourse,
            [key],
          ),
        )),
      ) as _i8.Future<_i5.Course>);
  @override
  _i8.Future<void> setCourse(
    String? key,
    _i5.Course? course,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCourse,
          [
            key,
            course,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [CourseImplService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCourseImplService extends _i1.Mock implements _i16.CourseImplService {
  @override
  _i8.Future<List<_i5.Course>?> course([String? searchCourse]) =>
      (super.noSuchMethod(
        Invocation.method(
          #course,
          [searchCourse],
        ),
        returnValue: _i8.Future<List<_i5.Course>?>.value(),
        returnValueForMissingStub: _i8.Future<List<_i5.Course>?>.value(),
      ) as _i8.Future<List<_i5.Course>?>);
}

/// A class which mocks [AuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationService extends _i1.Mock
    implements _i17.AuthenticationService {
  @override
  bool get isLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isLoggedIn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>> signup(
    String? name,
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [
            name,
            email,
            password,
          ],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #signup,
            [
              name,
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #signup,
            [
              name,
              email,
              password,
            ],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, _i18.User>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i8.Future<_i2.Either<_i11.AppException, _i18.User>>.value(
            _FakeEither_0<_i11.AppException, _i18.User>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, _i18.User>>.value(
                _FakeEither_0<_i11.AppException, _i18.User>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, _i18.User>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>> forgetPassword(
          String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgetPassword,
          [email],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #forgetPassword,
            [email],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #forgetPassword,
            [email],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, _i18.User>> getCurrentUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i8.Future<_i2.Either<_i11.AppException, _i18.User>>.value(
            _FakeEither_0<_i11.AppException, _i18.User>(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, _i18.User>>.value(
                _FakeEither_0<_i11.AppException, _i18.User>(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, _i18.User>>);
  @override
  _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>> logOutUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #logOutUser,
          [],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #logOutUser,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>.value(
                _FakeEither_0<_i11.AppException, _i2.None<dynamic>>(
          this,
          Invocation.method(
            #logOutUser,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i11.AppException, _i2.None<dynamic>>>);
}

/// A class which mocks [SharedPrefServiceService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPrefServiceService extends _i1.Mock
    implements _i19.SharedPrefServiceService {
  @override
  _i8.Future<void> saveUser(_i18.User? user) => (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [user],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<_i18.User?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i8.Future<_i18.User?>.value(),
        returnValueForMissingStub: _i8.Future<_i18.User?>.value(),
      ) as _i8.Future<_i18.User?>);
  @override
  _i8.Future<void> deleteUser() => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<bool> appIntroGuideValidation() => (super.noSuchMethod(
        Invocation.method(
          #appIntroGuideValidation,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
        returnValueForMissingStub: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
  @override
  _i8.Future<void> setAppIntroGuide() => (super.noSuchMethod(
        Invocation.method(
          #setAppIntroGuide,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [CourseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCourseRepository extends _i1.Mock implements _i20.CourseRepository {
  @override
  _i8.Future<List<_i5.Course>> searchCourses(
    String? query,
    Set<String>? categories,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchCourses,
          [
            query,
            categories,
          ],
        ),
        returnValue: _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i5.Course>>.value(<_i5.Course>[]),
      ) as _i8.Future<List<_i5.Course>>);
}
